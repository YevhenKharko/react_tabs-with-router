{"version":3,"sources":["components/NavBar.tsx","App.tsx","components/HomePage.tsx","components/TabsPage.tsx","components/NotFoundPage.tsx","Root.tsx","index.tsx"],"names":["NavBar","isNavLinkActive","isActive","cn","className","to","App","HomePage","TabsPage","tabId","useParams","currentTab","tabs","find","tab","id","map","title","content","NotFoundPage","Root","path","element","index","replace","mainPage","document","getElementById","createRoot","render"],"mappings":"wbAGaA,EAAS,WACpB,IAAMC,EAAkB,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,SACzB,OAAQC,IAAG,cAAe,CACxB,YAAaD,GAEhB,EAED,OACE,qBACEE,UAAS,0GAQT,UAAQ,MATV,SAWE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UAEE,cAAC,IAAD,CACEC,GAAG,IACHD,UAAWH,EAFb,kBAOA,cAAC,IAAD,CACEI,GAAG,QACHD,UAAWH,EAFb,wBAUT,ECpCYK,EAAM,kBACjB,qCACE,cAAC,EAAD,IAEA,qBAAKF,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,cAAC,IAAD,UANW,ECNNG,EAAW,kBAAM,oBAAIH,UAAU,QAAd,sBAAN,E,QCGXI,EAAW,WACtB,IAAQC,EAAUC,cAAVD,MAEFE,EAAaC,EAAKC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAON,CAAf,IAEhC,OACE,qCACE,oBAAIL,UAAU,QAAd,uBACA,qBAAKA,UAAU,gBAAf,SACE,6BACGQ,EAAKI,KAAI,SAAAF,GAAG,OACX,oBAEE,UAAQ,MACRV,WAAqB,OAAVO,QAAU,IAAVA,OAAA,EAAAA,EAAYI,MAAOD,EAAIC,GAAK,YAAc,GAHvD,SAKE,cAAC,IAAD,CACEV,GAAE,gBAAWS,EAAIC,IADnB,SAGGD,EAAIG,SAPFH,EAAIC,GAFA,QAejB,qBAAKX,UAAU,QAAQ,UAAQ,aAA/B,SACGO,EAAaA,EAAWO,QAAU,0BAI1C,ECjCYC,EAAe,kBAAO,oBAAIf,UAAU,QAAd,2BAAP,ECWfgB,EAAO,kBAClB,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,EAAD,IAAzB,UACE,cAAC,IAAD,CAAOC,OAAK,EAACD,QAAS,cAAC,EAAD,MACtB,cAAC,IAAD,CAAOD,KAAK,OAAOC,QAAS,cAAC,IAAD,CAAUjB,GAAG,IAAImB,SAAO,MACpD,eAAC,IAAD,CAAOH,KAAK,OAAZ,UACE,cAAC,IAAD,CAAOE,OAAK,EAACD,QAAS,cAAC,EAAD,MACtB,cAAC,IAAD,CAAOD,KAAK,UAAUC,QAAS,cAAC,EAAD,SAGjC,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,EAAD,YAXb,ECRdG,EAAWC,SAASC,eAAe,QAEzCC,qBAAWH,GAAUI,OAAO,cAAC,EAAD,I","file":"static/js/main.24224e47.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\nimport cn from 'classnames';\n\nexport const NavBar = () => {\n  const isNavLinkActive = ({ isActive }: { isActive: boolean }) => {\n    return (cn('navbar-item', {\n      'is-active': isActive,\n    }));\n  };\n\n  return (\n    <nav\n      className={`\n    navbar\n    is-light\n    is-fixed-top\n    is-mobile\n    has-shadow\n    has-navbar-fixed-top\n`}\n      data-cy=\"Nav\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n\n          <NavLink\n            to=\"/\"\n            className={isNavLinkActive}\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            to=\"/tabs\"\n            className={isNavLinkActive}\n          >\n            Tabs\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Outlet } from 'react-router-dom';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { NavBar } from './components/NavBar';\n\nexport const App = () => (\n  <>\n    <NavBar />\n\n    <div className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </div>\n  </>\n);\n","export const HomePage = () => <h1 className=\"title\">Home page</h1>;\n","import { Link, useParams } from 'react-router-dom';\nimport tabs from '../api/tabs.json';\n\nexport const TabsPage = () => {\n  const { tabId } = useParams();\n\n  const currentTab = tabs.find(tab => tab.id === tabId);\n\n  return (\n    <>\n      <h1 className=\"title\">Tabs page</h1>\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              key={tab.id}\n              data-cy=\"Tab\"\n              className={currentTab?.id === tab.id ? 'is-active' : ''}\n            >\n              <Link\n                to={`/tabs/${tab.id}`}\n              >\n                {tab.title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n      <div className=\"block\" data-cy=\"TabContent\">\n        {currentTab ? currentTab.content : 'Please select a tab'}\n      </div>\n    </>\n  );\n};\n","export const NotFoundPage = () => (<h1 className=\"title\">Page not found</h1>);\n","import {\n  Routes,\n  Route,\n  HashRouter as Router,\n  Navigate,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { HomePage } from './components/HomePage';\nimport { TabsPage } from './components/TabsPage';\nimport { NotFoundPage } from './components/NotFoundPage';\n\nexport const Root = () => (\n  <Router>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<HomePage />} />\n        <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n        <Route path=\"tabs\">\n          <Route index element={<TabsPage />} />\n          <Route path=\":tabId?\" element={<TabsPage />} />\n        </Route>\n\n        <Route path=\"*\" element={<NotFoundPage />} />\n      </Route>\n    </Routes>\n  </Router>\n);\n","import { createRoot } from 'react-dom/client';\nimport { Root } from './Root';\n\nconst mainPage = document.getElementById('root') as HTMLElement;\n\ncreateRoot(mainPage).render(<Root />);\n"],"sourceRoot":""}